def func1(arg1, arg2):
    def func2(arg3, arg4):
        var24 = func3(arg3, arg2)
        var25 = arg2 + (((-774 & arg3) | arg2) | arg1 | 1517021512) - (-187 ^ arg4 & ((arg2 - var24) + (-1602941233 & (2020468762 & arg1)))) ^ ((arg4 ^ (-885 + (398 | 867) + 1406103625)) + arg4) & var24
        var26 = -427 & (-1620197986 - (-541022569 ^ ((((9 & arg3) - ((var25 & ((var25 | arg3 - 329 | (arg2 ^ (arg2 + arg3)) - var25) & arg3)) | var24)) | -471 & arg3) - -932391379 + -818 + -2115917513)) | arg3 + arg3)
        var27 = 1743786026 ^ arg2 - arg1
        if arg4 < var24:
            var28 = -780 - (-439 ^ (((arg4 ^ arg2) | (arg1 | (var24 - -1370714460 | (((arg2 | arg4) ^ arg4 & arg1 | arg4 ^ arg3 & var25 + (arg3 - var24 ^ arg1 - var25)) & arg4)) & var25) + var25) + var26))
        else:
            var28 = (arg2 - 1453316906 + (arg3 + arg2)) + (arg1 | arg2)
        var29 = ((1736595002 + arg4) | ((var25 - var24 | arg1) - (arg2 ^ arg4 ^ arg1 - var25 & (328 - var27) - ((arg4 + var24 - (var25 + arg4)) ^ arg4) & -1517845467) & arg2 & 1754042050) | -464 + var26) - var27
        result = var26 | var26
        return result
    var30 = func2(arg1, arg2)
    var35 = func4(var30, arg2)
    if arg2 < arg1:
        var40 = class5()
    else:
        var40 = class7()
    for var41 in range(3):
        var42 = var40.func6
        var42(var35, var35)
    var43 = func11()
    var44 = arg2 - arg2 ^ var43
    var45 = ((var30 ^ -885) ^ 662) + var30
    var46 = arg1 | (arg1 & 1325729145 | arg2)
    var47 = var43 | var43 - var30
    var48 = var35 + var30
    var49 = ((var30 ^ -1853195466) | arg1) + arg2
    var50 = (-900838616 | var49) | var45
    var51 = (arg2 | var43) - (var46 - var47)
    var52 = arg1 & var49 + -485505027
    var53 = arg1 - 1708087108 & var43 | var43
    result = (var35 - 1289674146 ^ (694 | (var35 + var43) + ((var48 | var30) & var48) & var30 ^ var52 | var48)) | var51
    return result
def func11():
    func9()
    result = len(range(30))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 2
class class7(object):
    def func6(self, arg38, arg39):
        return 0
class class5(class7):
    def func6(self, arg36, arg37):
        result = (-518565473 + 0 + arg37) - 0
        return result
def func4(arg31, arg32):
    var33 = 0
    for var34 in xrange(12):
        if var34 < var33:
            var33 += 2 & (var34 + var34)
        else:
            var33 += var34 | (-6 + -3)
    return var33
def func3(arg5, arg6):
    var7 = -1932620440 ^ (-379167690 | arg5 | arg5)
    if arg6 < var7:
        var8 = arg5 - (1584137997 & 181) & arg6
    else:
        var8 = arg6 - arg6 + arg6 | -428
    var9 = -542270713 + arg6
    var10 = (arg5 | -190 & arg5) & arg5
    var11 = ((934 | var7) & var9) ^ arg6
    var12 = -1242579349 ^ ((var9 & var11) ^ var10)
    var13 = var10 | (-2029408935 | 644)
    var14 = ((-985 - 684516752) | arg6) + var11
    var15 = var11 | var9 - var14 & -1130421102
    var16 = (arg5 ^ -424213126) + var12
    var17 = var15 ^ var13 & (-969234848 - var7)
    var18 = var10 - arg5 | arg6 ^ var14
    if var9 < var15:
        var19 = (var11 | (arg5 ^ var7)) + var9
    else:
        var19 = 520 - (arg6 & (var9 ^ -496))
    var20 = -1037069742 & var18
    var21 = var17 + (1234714339 | arg6 ^ var15)
    var22 = (-2094225205 | var7) | 561218891 - var16
    if arg5 < arg5:
        var23 = var11 ^ var11 & var17 & var20
    else:
        var23 = ((var7 & var16) ^ 273) | var18
    result = var14 & 568
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
